# {{ ansible_managed }}

# Pass any given paramter to yum, as run in all the scripts invoked
# by this package.  Be aware that this is global, and yum is invoked in
# several modes by these scripts for which your own parameter might not
# be appropriate
{% if aspects_yum_cron_config.YUM_PARAMETER is defined %}
YUM_PARAMETER={{ aspects_yum_cron_config.YUM_PARAMETER }}
{% else %}
YUM_PARAMETER=
{% endif %}

# Don't install, just check (valid: yes|no)
CHECK_ONLY={{ aspects_yum_cron_config.CHECK_ONLY }}

# Check to see if you can reach the repos before updating (valid: yes|no)
CHECK_FIRST={{ aspects_yum_cron_config.CHECK_FIRST }}

# Don't install, just check and download (valid: yes|no)
# Implies CHECK_ONLY=yes (gotta check first to see what to download)
DOWNLOAD_ONLY={{ aspects_yum_cron_config.DOWNLOAD_ONLY }}

# Error level, practical range 0-10, 0 means print only critical errors which
# you must be told, 1 means print all errors, even ones that are not important
# Level 0 is the default
ERROR_LEVEL={{ aspects_yum_cron_config.ERROR_LEVEL }}

# Debug level, practical range 0-10, higher number means more output
# Level 1 is a useful level if you want to see what's been done and
# don't want to read /var/log/yum.log
# Level 0 is the default
DEBUG_LEVEL={{ aspects_yum_cron_config.DEBUG_LEVEL }}

# randomwait is used by yum to wait random time
# default is 60 so yum waits random time from 1 to 60 minutes
# the value must not be zero
RANDOMWAIT="{{ aspects_yum_cron_config.RANDOMWAIT }}"

# if MAILTO is set and the mail command is available, the mail command
# is used to deliver yum output

# by default MAILTO is unset, so crond mails the output by itself
# example:  MAILTO=root
{% if aspects_yum_cron_config.MAILTO is defined %}
MAILTO={{ aspects_yum_cron_config.MAILTO }}
{% else %}
MAILTO=
{% endif %}

# you may set SYSTEMNAME if you want your yum emails tagged differently
# default is output of hostname command
# this variable is used only if MAILTO is set too
{% if aspects_yum_cron_config.SYSTEMNAME is defined %}
SYSTEMNAME="{{ aspects_yum_cron_config.SYSTEMNAME }}"
{% endif %}

# you may set DAYS_OF_WEEK to the days of the week you want to run
# default is every day
DAYS_OF_WEEK="{{ aspects_yum_cron_config.DAYS_OF_WEEK }}"

# which day should it do cleanup on?  defaults to 0 (Sunday).  If this day isn't in the
# DAYS_OF_WEEK above, it'll never happen
CLEANDAY="{{ aspects_yum_cron_config.CLEANDAY }}"

# set to yes to make the yum-cron service to wait for transactions to complete
SERVICE_WAITS={{ aspects_yum_cron_config.SERVICE_WAITS }}

# set maximum time period (in seconds) for the yum-cron service to wait for
# transactions to complete.  The default is 300 seconds (5 minutes)
SERVICE_WAIT_TIME={{ aspects_yum_cron_config.SERVICE_WAIT_TIME }}
